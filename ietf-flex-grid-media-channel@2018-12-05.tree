
module: ietf-flex-grid-media-channel
  augment /te:te/te:tunnels/te:tunnel:
    +--rw src-client-signal?   identityref
    +--rw dst-client-signal?   identityref
    +--rw fec-type?            identityref
    +--rw termination-type?    identityref
    +--rw bit-stuffing?        boolean
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:te-bandwidth/te:technology:
    +--:(flex-grid)
       +--rw bandwidth-type?   identityref
  augment /te:te/te:tunnels/te:tunnel/te:te-bandwidth/te:technology:
    +--:(flex-grid)
       +--rw bandwidth-type?   identityref
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:te-bandwidth/te:technology:
    +--:(flex-grid)
       +--rw bandwidth-type?   identityref
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:te-bandwidth/te:technology:
    +--:(flex-grid)
       +--rw bandwidth-type?   identityref
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:te-bandwidth/te:technology:
    +--:(flex-grid)
       +--rw bandwidth-type?   identityref
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:explicit-route-objects/te:route-object-exclude-always/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:explicit-route-objects/te:route-object-include-exclude/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-in-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-out-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:globals/te:named-path-constraints/te:named-path-constraint/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-exclude-objects/te:route-object-exclude-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-include-objects/te:route-object-include-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:explicit-route-objects/te:route-object-exclude-always/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:explicit-route-objects/te:route-object-include-exclude/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:state/te:computed-paths-properties/te:computed-path-properties/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:state/te:lsps/te:lsp/te:lsp-record-route-subobjects/te:record-route-subobject/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:state/te:lsps/te:lsp/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-exclude-objects/te:route-object-exclude-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-include-objects/te:route-object-include-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:explicit-route-objects/te:route-object-exclude-always/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:explicit-route-objects/te:route-object-include-exclude/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:state/te:computed-paths-properties/te:computed-path-properties/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:state/te:lsps/te:lsp/te:lsp-record-route-subobjects/te:record-route-subobject/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-primary-paths/te:p2p-primary-path/te:p2p-reverse-primary-path/te:state/te:lsps/te:lsp/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-exclude-objects/te:route-object-exclude-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:optimizations/te:algorithm/te:metric/te:optimization-metric/te:explicit-route-include-objects/te:route-object-include-object/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:explicit-route-objects/te:route-object-exclude-always/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:explicit-route-objects/te:route-object-include-exclude/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw (single-or-super-channel)?
          +--:(single)
          |  +--rw flex-n?              int16
          |  +--rw flex-m?              uint16
          +--:(super)
             +--rw subcarrier-flex-n* [flex-n]
                +--rw flex-n    int16
                +--rw flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-in-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-in-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-out-segment/te:label-restrictions/te:label-restriction:
    +--rw grid-type?   identityref
    +--rw priority?    uint8
    +--rw flex-grid
       +--rw nominal-central-frequency-granularity?   identityref
       +--rw slot-width-granularity?                  identityref
       +--rw min-slot-width-factor?                   uint16
       +--rw max-slot-width-factor?                   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-start/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:path-out-segment/te:label-restrictions/te:label-restriction/te:label-end/te:te-label/te:technology:
    +--:(flex-grid)
       +--rw flex-n?   int16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:state/te:computed-paths-properties/te:computed-path-properties/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:state/te:lsps/te:lsp/te:lsp-record-route-subobjects/te:record-route-subobject/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:tunnels/te:tunnel/te:p2p-secondary-paths/te:p2p-secondary-path/te:state/te:lsps/te:lsp/te:path-properties/te:path-route-objects/te:path-computed-route-object/te:state/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:te/te:lsps-state/te:lsp/te:lsp-record-route-subobjects/te:record-route-subobject/te:type/te:label/te:label-hop/te:te-label/te:technology:
    +--:(flex-grid)
       +--ro (single-or-super-channel)?
          +--:(single)
          |  +--ro flex-n?              int16
          |  +--ro flex-m?              uint16
          +--:(super)
             +--ro subcarrier-flex-n* [flex-n]
                +--ro flex-n    int16
                +--ro flex-m?   uint16
  augment /te:tunnels-rpc/te:input/te:tunnel-info/tepc:path-request:
    +---- src-client-signal?       identityref
    +---- dst-client-signal?       identityref
    +---- fec-type?                identityref
    +---- termination-type?        identityref
    +---- bit-stuffing?            boolean
    +---- wavelength-assignment?   identityref
